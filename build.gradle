plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
    id 'io.freefair.lombok' version '8.4'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'com.codeborne:selenide:6.19.1'
    testImplementation 'io.rest-assured:rest-assured:5.3.0'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    testImplementation 'io.qameta.allure:allure-junit5:2.24.0'
    testImplementation 'io.qameta.allure:allure-rest-assured:2.24.0'
    testImplementation 'io.qameta.allure:allure-selenide:2.24.0'
    implementation 'org.aspectj:aspectjweaver:1.9.20.1'
    testImplementation 'com.github.javafaker:javafaker:1.0.2'
    testImplementation 'org.slf4j:slf4j-api:2.0.9'
    testImplementation 'ch.qos.logback:logback-classic:1.4.14'
    testImplementation 'io.rest-assured:rest-assured:5.4.0'}

allure {
    version.set('2.24.0')
    useJUnit5 {
        version = '2.24.0'
    }
}

def commonTestConfig = {
    useJUnitPlatform()
    systemProperties = [
            'selenide.browser': 'chrome',
            'selenide.browserSize': '1920x1080',
            'selenide.headless': 'false',
            'allure.results.directory': 'build/allure-results',
            // Запуск в режиме инкогнито для чистого браузера без кеша и предзаполненных данных
            'selenide.incognito': 'true',
    ] + System.getProperties()
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}

test {
    configure commonTestConfig
}

task apiTest(type: Test) {
    configure commonTestConfig
    useJUnitPlatform {
        includeTags("api")
    }
    description = 'Запускает только API тесты'
}

task uiTest(type: Test) {
    configure commonTestConfig
    useJUnitPlatform {
        includeTags("ui")
    }
    description = 'Запускает только UI тесты'
}

task apiPositiveTest(type: Test) {
    configure commonTestConfig
    filter {
        includeTestsMatching "*ApiPositiveTests"
    }
    description = 'Запускает только API позитивные тесты'
}

task apiNegativeTest(type: Test) {
    configure commonTestConfig
    filter {
        includeTestsMatching "*ApiNegativeTests"
    }
    description = 'Запускает только API негативные тесты'
}

task runAllTestsWithReport {
    dependsOn clean, test, allureServe
    group = 'verification'
    description = 'Запускает ВСЕ тесты и открывает Allure отчет'
}

task runApiTestsWithReport {
    dependsOn clean, apiTest, allureServe
    group = 'verification'
    description = 'Запускает только API тесты и открывает Allure отчет'
}

task runUiTestsWithReport {
    dependsOn clean, uiTest, allureServe
    group = 'verification'
    description = 'Запускает только UI тесты и открывает Allure отчет'
}

task runApiPositiveTestsWithReport {
    dependsOn clean, apiPositiveTest, allureServe
    group = 'verification'
    description = 'Запускает только API позитивные тесты и открывает Allure отчет'
}

task runApiNegativeTestsWithReport {
    dependsOn clean, apiNegativeTest, allureServe
    group = 'verification'
    description = 'Запускает только API негативные тесты и открывает Allure отчет'
}

compileJava {
    options.annotationProcessorPath = configurations.annotationProcessor
}